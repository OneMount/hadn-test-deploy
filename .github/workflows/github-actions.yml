name: Build and Deploy to GKE
on:
  push:
    branches:
      - "*"
    tags:
      - "*"

env:
  PROJECT_ID: vinid-playground
  GKE_CLUSTER: hadn-gke    # Add your cluster name here.
  GKE_ZONE: asia-east1-b   # Add your cluster zone here.
  DEPLOYMENT_NAME: flask # Add your deployment name here.
  IMAGE: flask-test

jobs:
  build:
    name: Build, Publish
    # runs-on: self-hosted
    runs-on: org-runner
    # environment: dev
    # if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
            hadnat/${{ env.IMAGE }}:${{ github.sha }}

  deploy-to-dev:
    name: Deploy to Dev
    # runs-on: self-hosted
    runs-on: org-runner
    needs: [build]
    environment: development
    if: github.ref == 'refs/heads/dev'
    # if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: auth
      uses: google-github-actions/auth@v0.4.0
      with:
        workload_identity_provider: 'projects/343258946223/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider'
        service_account: 'github-runner@vinid-playground.iam.gserviceaccount.com'
# https://iam.googleapis.com/projects/343258946223/locations/global/workloadIdentityPools/hado-github-pool/providers/hado-github-provider 

    - name: get-gke-credentials
      uses: google-github-actions/get-gke-credentials@v0.4.0
      with:
        cluster_name: hadn-gke
        location: asia-east1-b

    # - name: get-pods
    #   run: kubectl get pods

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        # service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        # credentials: ${{ secrets.GKE_SA_KEY }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod u+x ./kubectl
        sudo mv ./kubectl /usr/bin

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image IMAGE:TAG=hadnat/$IMAGE:$GITHUB_SHA
        ./kustomize edit set namespace dev
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

  deploy-to-prod:
    name: Deploy to Prod
    # runs-on: self-hosted
    runs-on: org-runner
    needs: [build]
    environment: production
    if: github.ref == 'refs/heads/main'
    # if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod u+x ./kubectl
        sudo mv ./kubectl /usr/bin

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image IMAGE:TAG=hadnat/$IMAGE:$GITHUB_SHA
        ./kustomize edit set namespace default
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
